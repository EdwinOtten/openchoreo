# This is the default values.yaml file for the Choreo platform Helm chart.
# The values.yaml is generated by the helmify and append content of this file to the generated values.yaml
# Therefore, all the manual changes to the values.yaml should do here.
metricsServer:
  enabled: false
  kubeletInsecureTlsEnabled: true
# customizing the vault configurations
vault:
  server:
    # -- Resource limits and requests for the vault server
    resources:
      requests:
        memory: 64Mi
        cpu: 50m
      limits:
        memory: 128Mi
        cpu: 100m
    dev:
      enabled: true
      devRootToken: "root"
      logLevel: "info"
  injector:
    # -- Resource limits and requests for the vault injector
    resources:
      requests:
        memory: 64Mi
        cpu: 50m
      limits:
        memory: 128Mi
        cpu: 100m
# customizing the argo workflows configurations
argo-workflows:
  controller:
    # -- Resource limits and requests for the argo workflows controller
    resources:
      limits:
        memory: 64Mi
        cpu: 50m
      requests:
        memory: 32Mi
        cpu: 25m
  server:
    # -- Resource limits and requests for the argo workflows server
    resources:
      limits:
        memory: 64Mi
        cpu: 50m
      requests:
        memory: 32Mi
        cpu: 25m
  crds:
    keep: false
  workflow:
    serviceAccount:
      create: true
  workflowNamespaces:
    - argo-build
# customizing the registry configurations
registry:
  # -- Resource limits and requests for the registry
  resources:
    limits:
      memory: 256Mi
      cpu: 100m
    requests:
      memory: 128Mi
      cpu: 50m
# customizing the envoy gateway configurations
gateway-helm:
  config:
    envoyGateway:
      rateLimit:
        backend:
          type: Redis
          redis:
            url: redis.choreo-system-dp.svc.cluster.local:6379
  # -- Resource limits and requests for the gateway
  deployment:
    envoyGateway:
      resources:
        limits:
          cpu: 200m
          memory: 256Mi
        requests:
          cpu: 100m
          memory: 128Mi
# customizing the cert-manager configurations
certmanager:
  enabled: true
  crds:
    enabled: true
  # -- Resource limits and requests for the cert-manager controller
  resources:
    requests:
      cpu: 10m
      memory: 32Mi
    limits:
      cpu: 50m
      memory: 64Mi
  cainjector:
    # -- Resource limits and requests for the cert-manager cainjector
    resources:
      requests:
        cpu: 10m
        memory: 32Mi
      limits:
        cpu: 50m
        memory: 64Mi
  webhook:
    # -- Resource limits and requests for the cert-manager webhook
    resources:
      requests:
        cpu: 10m
        memory: 32Mi
      limits:
        cpu: 50m
        memory: 64Mi
