## Sample Organization kind (Cluster-scoped)
apiVersion: core.choreo.dev/v1
kind: Organization
metadata:
  name: default-org
  annotations:
    core.choreo.dev/display-name: Default Organization
    core.choreo.dev/description: Getting started with your first organization
  labels:
    core.choreo.dev/name: default-org
spec:
---

## Sample DataPlane kind (Namespaced)
apiVersion: core.choreo.dev/v1
kind: DataPlane
metadata:
  name: default-dataplane
  namespace: default-org
  annotations:
    core.choreo.dev/display-name: Default Data Plane
    core.choreo.dev/description: Local development data plane
  labels:
    core.choreo.dev/organization: default-org
    core.choreo.dev/name: default-dataplane
spec:
  kubernetesCluster:
    name: kind-cluster-1
    connectionConfigRef: kind-cluster-1-connection-config
    featureFlags:
      cilium: true
      scaleToZero: true
      gatewayType: envoy
  gateway:
    publicVirtualHost: choreoapis.local
    organizationVirtualHost: internal.choreoapis.local
---

## Sample DeploymentPipeline kind (Namespaced)
apiVersion: core.choreo.dev/v1
kind: DeploymentPipeline
metadata:
  name: default-pipeline
  namespace: default-org
  annotations:
    core.choreo.dev/display-name: Default Pipeline
    core.choreo.dev/description: Standard deployment pipeline with dev, staging, and prod environments
  labels:
    core.choreo.dev/organization: default-org
    core.choreo.dev/name: default-pipeline
spec:
  promotionPaths:
    - sourceEnvironmentRef: development
      targetEnvironmentRefs:
        - name: staging
          requiresApproval: false
        - name: production
          isManualApprovalRequired: true
    - sourceEnvironmentRef: staging
      targetEnvironmentRefs:
        - name: production
          requiresApproval: true
---

## Sample Environment kind (Namespaced)
apiVersion: core.choreo.dev/v1
kind: Environment
metadata:
  name: development
  namespace: default-org
  annotations:
    core.choreo.dev/display-name: Development Environment
    core.choreo.dev/description: Development environment for testing
  labels:
    core.choreo.dev/organization: default-org
    core.choreo.dev/name: development
spec:
  dataPlaneRef: default-dataplane 
  isProduction: false
  dnsPrefix: local-dev
---

## Sample Project kind (Namespaced)
apiVersion: core.choreo.dev/v1
kind: Project
metadata:
  name: default-project
  namespace: default-org
  annotations:
    core.choreo.dev/display-name: Default Project
    core.choreo.dev/description: Your first project to get started
  labels:
    core.choreo.dev/organization: default-org
    core.choreo.dev/name: default-project
spec:
  deploymentPipelineRef: default-pipeline
---

## Sample Component kind (Namespaced)
apiVersion: core.choreo.dev/v1
kind: Component
metadata:
  name: time-logger
  namespace: default-org
  annotations:
    core.choreo.dev/display-name: Time Logger Component
    core.choreo.dev/description: This component logs the time periodically
  labels:
    core.choreo.dev/organization: default-org
    core.choreo.dev/project: default-project
    core.choreo.dev/name: time-logger
spec:
  type: ScheduledTask
  source:
    gitRepository:
      url: https://github.com/wso2/choreo-samples
    authentication:
      secretRef: choreo-bot-git-pat
---

## Sample DeploymentTrack kind (Namespaced)
apiVersion: core.choreo.dev/v1
kind: DeploymentTrack
metadata:
  name: time-logger-main
  namespace: default-org
  annotations:
    core.choreo.dev/display-name: Deployment Track
    core.choreo.dev/description: Main deployment track
  labels:
    core.choreo.dev/organization: default-org
    core.choreo.dev/project: default-project
    core.choreo.dev/component: time-logger
    core.choreo.dev/name: time-logger-main
spec:
  buildTemplateSpec:
    branch: main
    path: /docker-time-logger-schedule
    buildConfiguration:
      buildpack:
        name: Go
---

## Sample Build kind (Namespaced)
apiVersion: core.choreo.dev/v1
kind: Build
metadata:
  name: time-logger-build-01
  namespace: default-org
  annotations:
    core.choreo.dev/display-name: Default Build
    core.choreo.dev/description: Initial build configuration
  labels:
    core.choreo.dev/organization: default-org
    core.choreo.dev/project: default-project
    core.choreo.dev/component: time-logger
    core.choreo.dev/deployment-track: time-logger-main
    core.choreo.dev/name: time-logger-build-01
spec:
  branch: main
  path: docker-time-logger-schedule
  buildConfiguration:
    #    docker:
    #      context: docker-time-logger-schedule
    #      dockerfilePath: /docker-time-logger-schedule/Dockerfile
    buildpack:
      name: Go
#      version: "1.22"
---

#### Sample Deployment kind (Namespaced)
apiVersion: core.choreo.dev/v1
kind: Deployment
metadata:
  name: time-logger-development-deployment
  namespace: default-org
  annotations:
    core.choreo.dev/display-name: Deployment of Time Logger
    core.choreo.dev/description: Initial deployment configuration
  labels:
    core.choreo.dev/organization: default-org
    core.choreo.dev/project: default-project
    core.choreo.dev/environment: development
    core.choreo.dev/component: time-logger
    core.choreo.dev/deployment-track: time-logger-main
    core.choreo.dev/name: time-logger-development-deployment
spec:
  deploymentArtifactRef: time-logger-build-01

---
### Sample DeployableArtifact kind (Namespaced)
#apiVersion: core.choreo.dev/v1
#kind: DeployableArtifact
#metadata:
#  name: github-issue-reporter-daily-deployable-artifact-2024-12-10-1
#  namespace: default-org
#  annotations:
#    core.choreo.dev/display-name: Daily Deployable Artifact
#    core.choreo.dev/description: Generated artifact from Build 2024-12-10 1
#  labels:
#    core.choreo.dev/organization: default-organization
#    core.choreo.dev/project: internal-apps
#    core.choreo.dev/component: github-issue-reporter
#    core.choreo.dev/deployment-track: daily
#    core.choreo.dev/name: build-2024-12-10-1
#spec:
#  targetArtifact:
#    fromBuildRef:
#      name: github-issue-reporter-daily-build-2024-12-10-1
#  configuration:
#    application:
#      env:
#        - key: GITHUB_REPOSITORY
#          value: https://github.com/wso2/product-apim
#      task:
#        disabled: false
#        schedule:
#          cron: "*/1 * * * *"
#          timezone: Asia/Colombo
